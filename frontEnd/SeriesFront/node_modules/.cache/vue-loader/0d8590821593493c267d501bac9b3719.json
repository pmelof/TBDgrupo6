{"remainingRequest":"/Users/bassvera/Documents/workspace/tbdproject/TBDgrupo6/frontEnd/SeriesFront/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/bassvera/Documents/workspace/tbdproject/TBDgrupo6/frontEnd/SeriesFront/src/views/PercepcionSerie.vue?vue&type=style&index=0&id=2cdc7308&scoped=true&lang=css&","dependencies":[{"path":"/Users/bassvera/Documents/workspace/tbdproject/TBDgrupo6/frontEnd/SeriesFront/src/views/PercepcionSerie.vue","mtime":1560053602242},{"path":"/Users/bassvera/Documents/workspace/tbdproject/TBDgrupo6/frontEnd/SeriesFront/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/bassvera/Documents/workspace/tbdproject/TBDgrupo6/frontEnd/SeriesFront/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/bassvera/Documents/workspace/tbdproject/TBDgrupo6/frontEnd/SeriesFront/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/bassvera/Documents/workspace/tbdproject/TBDgrupo6/frontEnd/SeriesFront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/bassvera/Documents/workspace/tbdproject/TBDgrupo6/frontEnd/SeriesFront/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n.el-card {\r\n    width: 100%;\r\n    height: 80vh;\r\n}\r\n.el-header {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n}\r\n.container {\r\n  display: block;\r\n  position: relative;\r\n  margin-bottom: 12px;\r\n  cursor: pointer;\r\n  font-size: 15px;\r\n  -webkit-user-select: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  user-select: none;\r\n}\r\n\r\n/* Hide the browser's default checkbox */\r\n.container input {\r\n  position: absolute;\r\n  opacity: 0;\r\n  cursor: pointer;\r\n  height: 0;\r\n  width: 0;\r\n}\r\n\r\n/* Create a custom checkbox */\r\n.checkmark {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  height: 25px;\r\n  width: 25px;\r\n  background-color: #eee;\r\n}\r\n\r\n/* On mouse-over, add a grey background color */\r\n.container:hover input ~ .checkmark {\r\n  background-color: #ccc;\r\n}\r\n\r\n/* When the checkbox is checked, add a blue background */\r\n.container input:checked ~ .checkmark {\r\n  background-color: #2196F3;\r\n}\r\n\r\n/* Create the checkmark/indicator (hidden when not checked) */\r\n.checkmark:after {\r\n  content: \"\";\r\n  position: absolute;\r\n  display: none;\r\n}\r\n\r\n/* Show the checkmark when checked */\r\n.container input:checked ~ .checkmark:after {\r\n  display: block;\r\n}\r\n\r\n/* Style the checkmark/indicator */\r\n.container .checkmark:after {\r\n  left: 9px;\r\n  top: 5px;\r\n  width: 5px;\r\n  height: 10px;\r\n  border: solid white;\r\n  border-width: 0 3px 3px 0;\r\n  -webkit-transform: rotate(45deg);\r\n  -ms-transform: rotate(45deg);\r\n  transform: rotate(45deg);\r\n}\r\n\r\n.button {\r\n  background-color: #2196F3;\r\n  border: none;\r\n  border-radius: 2px;\r\n  color: white;\r\n  padding: 10px 20px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  font-size: 15px;\r\n}\r\n",{"version":3,"sources":["PercepcionSerie.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PercepcionSerie.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <el-container>\r\n    <el-header>\r\n      <h1>Percepción de series</h1>\r\n    </el-header>\r\n    <el-main>\r\n      <el-row :gutter=\"20\">\r\n        <el-col :span=\"6\">\r\n          <el-card class=\"box-card\">\r\n            <h3>Filtro</h3>\r\n            <h5>Seleccione uno o<br> más series</h5>\r\n            <label class=\"container\">\r\n                <input type=\"checkbox\" checked=\"checked\">\r\n                <span class=\"checkmark\"></span> Game of Thrones\r\n            </label>\r\n            <label class=\"container\">\r\n                <input type=\"checkbox\" checked=\"checked\">\r\n                <span class=\"checkmark\"></span> Breaking Bad\r\n            </label>\r\n            <label class=\"container\">\r\n                <input type=\"checkbox\" checked=\"checked\">\r\n                <span class=\"checkmark\"></span> Chernobyl\r\n            </label>\r\n            <br>\r\n            <label class=\"button\">Filtrar.</label>\r\n          </el-card>\r\n        </el-col>\r\n        <el-col :span=\"18\">\r\n          <el-card class=\"box-card\">\r\n            <highcharts :options=\"chartOptions\"></highcharts>\r\n          </el-card>\r\n        </el-col>\r\n      </el-row>\r\n    </el-main>\r\n  </el-container>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            chartOptions: {\r\n                series: [\r\n                    {\r\n                        name: 'Positiva',\r\n                        data: [107, 31, 635, 203, 2],\r\n                        color: 'green',\r\n                    },\r\n                    {\r\n                        name: 'Neutra',\r\n                        data: [133, 156, 947, 408, 6],\r\n                        color: 'grey',\r\n                    },\r\n                    {\r\n                        name: 'Negativa',\r\n                        data: [814, 841, 3714, 727, 31],\r\n                        color: 'purple',\r\n                    },\r\n                ],\r\n                chart: {\r\n                    renderTo: 'container',\r\n                    type: 'bar',\r\n                },\r\n                title: {\r\n                    text: 'Percepción de series',\r\n                },\r\n                subtitle: {\r\n                    text:\r\n                        '(estadísticas obtenidas de la red social Twitter)',\r\n                },\r\n                xAxis: {\r\n                    categories: [\r\n                        'Game of Thrones',\r\n                        'Breaking Bad',\r\n                        'Chernobyl',\r\n                        'BoJack Horseman',\r\n                        'The Walking Dead',\r\n                    ],\r\n                    title: {\r\n                        text: null,\r\n                    },\r\n                },\r\n                yAxis: {\r\n                    min: 0,\r\n                    title: {\r\n                        text: 'Número de tuits',\r\n                        align: 'high',\r\n                    },\r\n                    labels: {\r\n                        overflow: 'justify',\r\n                    },\r\n                },\r\n                tooltip: {\r\n                    valueSuffix: ' tuits',\r\n                },\r\n                plotOptions: {\r\n                    bar: {\r\n                        dataLabels: {\r\n                            enabled: true,\r\n                        },\r\n                    },\r\n                },\r\n                credits: {\r\n                    enabled: false,\r\n                },\r\n                legend: {\r\n                    layout: 'vertical',\r\n                    align: 'right',\r\n                    verticalAlign: 'top',\r\n                    x: -40,\r\n                    y: 80,\r\n                    floating: true,\r\n                    borderWidth: 1,\r\n                    shadow: true,\r\n                },\r\n            },\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.el-card {\r\n    width: 100%;\r\n    height: 80vh;\r\n}\r\n.el-header {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n}\r\n.container {\r\n  display: block;\r\n  position: relative;\r\n  margin-bottom: 12px;\r\n  cursor: pointer;\r\n  font-size: 15px;\r\n  -webkit-user-select: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  user-select: none;\r\n}\r\n\r\n/* Hide the browser's default checkbox */\r\n.container input {\r\n  position: absolute;\r\n  opacity: 0;\r\n  cursor: pointer;\r\n  height: 0;\r\n  width: 0;\r\n}\r\n\r\n/* Create a custom checkbox */\r\n.checkmark {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  height: 25px;\r\n  width: 25px;\r\n  background-color: #eee;\r\n}\r\n\r\n/* On mouse-over, add a grey background color */\r\n.container:hover input ~ .checkmark {\r\n  background-color: #ccc;\r\n}\r\n\r\n/* When the checkbox is checked, add a blue background */\r\n.container input:checked ~ .checkmark {\r\n  background-color: #2196F3;\r\n}\r\n\r\n/* Create the checkmark/indicator (hidden when not checked) */\r\n.checkmark:after {\r\n  content: \"\";\r\n  position: absolute;\r\n  display: none;\r\n}\r\n\r\n/* Show the checkmark when checked */\r\n.container input:checked ~ .checkmark:after {\r\n  display: block;\r\n}\r\n\r\n/* Style the checkmark/indicator */\r\n.container .checkmark:after {\r\n  left: 9px;\r\n  top: 5px;\r\n  width: 5px;\r\n  height: 10px;\r\n  border: solid white;\r\n  border-width: 0 3px 3px 0;\r\n  -webkit-transform: rotate(45deg);\r\n  -ms-transform: rotate(45deg);\r\n  transform: rotate(45deg);\r\n}\r\n\r\n.button {\r\n  background-color: #2196F3;\r\n  border: none;\r\n  border-radius: 2px;\r\n  color: white;\r\n  padding: 10px 20px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  font-size: 15px;\r\n}\r\n</style>"]}]}